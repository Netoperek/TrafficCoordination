car = 3 tiles
speed = 1 tile / s
state = (x1, y1, x2, y2)

Possible movements:
  Tile & Direction:
    1N
    1E
    1W
    1S
    STAY

Input:
  World Size:
    x and y section:
      x belongs to [-10; 10]
      y belongs to [-10; 10]

  Roads as straight lines:
    As Functions:
      y = 0 
      x = 0
      y = 3

Edge:
  1 time stamp = 1 s

----------------------------------------------------------------------------------------------------
 7                        
                      -  
 6                    2   
                      -  
 5                    2   
                      -  
 4                    2   
                      -  
 3 | | | | | | | | | |x| | | | | |1|1|1| |

 2                    -  
                       
 1                    -  
                1
 0 | | | | | |o|o|o| |x| | | | | | | | | |
-1
                      - 
-2                      
                      -  
-3                    o  
                      -  
-4                    o 2
                      -  
-5                    o   
                      -  
-6                       
                      -  
-7                       
    9 8 7 6 5 4 3 2 1 0 1 2 3 4 5 6 7 8 9
    - - - - - - - - - 

For example above:
  World Size:
    x belongs to [-9; 9]
    y belongs to [-7; 7]

  Roads:
    y = 0
    x = 0
    y = 3

  Cars position (state):
    (x1, y1, x2, y2) -> (-4, 0, 0, -5)

  Cars desired position (final state):
    (x1, y1, x2, y2) -> (6, 3, 0, 4)

How will it go:
  
  heuristic_function:
    Reduced distance for all cars for one time stamp            
  
  TIME: 0s

  (-4, 0, 0, -5):         EDGE#1          EDGE#2          EDGE#3          EDGE#4
  next possible states: (-3, 0, 0, -4), (-3, 0, 0, -5), (-4, 0, 0, -4), (-4, 0, 0, -5)
      #1# (-3, 0, 0, -4) heuristic_function:
        distance from (-3, 0, 0, -4) -> : (6, 3, 0, 4) [AFTER MOVE]
          car1_d1 : sqrt[(6 - (-3))^2 + (3-0)^2] = 9.48
          car2_d1 : sqrt[0 + (4-(-4))^2] = 8
        distance from (-4, 0, 0, -5) -> : (6, 3, 0, 4) [BEFORE MOVE]
          car1_d2 : sqrt[(6 - (-4))^2 + (3-0)^2] = 10.44
          car2_d2 : sqrt[0 + (4-(-5))^2] = 9

        I = car1_d2 - car1_d1 = 1.02
        II = car2_d2 - car2_d1 = 0.48
        II + I = 1.5 - DISTANCE SHORTENED 1.5 tile / s 
      #2# (-3, 0, 0, -5) heuristic_function: (for sure worse then #1#)
      #3# (-4, 0, 0, -4) heuristic_function: (for sure worse then #1#)
      #4# (-4, 0, 0, -5) heuristic_function: (for sure worse then #1#)
